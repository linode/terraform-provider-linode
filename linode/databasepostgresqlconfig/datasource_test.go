//go:build integration || databasepostgresqlconfig

package databasepostgresqlconfig_test

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-plugin-testing/knownvalue"
	"github.com/hashicorp/terraform-plugin-testing/statecheck"
	"github.com/hashicorp/terraform-plugin-testing/tfjsonpath"
	"github.com/linode/terraform-provider-linode/v2/linode/acceptance"
	"github.com/linode/terraform-provider-linode/v2/linode/databasepostgresqlconfig/tmpl"
)

func TestAccDataSourceDatabasePostgreSQLConfig_basic(t *testing.T) {
	t.Parallel()

	resourceName := "data.linode_database_postgresql_config.foobar"

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { acceptance.PreCheck(t) },
		ProtoV5ProviderFactories: acceptance.ProtoV5ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: tmpl.DataBasic(t),
				ConfigStateChecks: []statecheck.StateCheck{
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_analyze_scale_factor").AtMapKey("description"),
						knownvalue.StringExact("Specifies a fraction of the table size to add to autovacuum_analyze_threshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20% of table size)"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_analyze_scale_factor").AtMapKey("minimum"),
						knownvalue.Float64Exact(0.0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_analyze_scale_factor").AtMapKey("maximum"),
						knownvalue.Float64Exact(1.0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_analyze_scale_factor").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_analyze_scale_factor").AtMapKey("type"),
						knownvalue.StringExact("number"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_analyze_threshold").AtMapKey("description"),
						knownvalue.StringExact("Specifies the minimum number of inserted, updated or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_analyze_threshold").AtMapKey("minimum"),
						knownvalue.Int32Exact(0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_analyze_threshold").AtMapKey("maximum"),
						knownvalue.Int32Exact(2147483647),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_analyze_threshold").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_analyze_threshold").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_max_workers").AtMapKey("description"),
						knownvalue.StringExact("Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_max_workers").AtMapKey("minimum"),
						knownvalue.Int64Exact(1),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_max_workers").AtMapKey("maximum"),
						knownvalue.Int64Exact(20),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_max_workers").AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_max_workers").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_naptime").AtMapKey("description"),
						knownvalue.StringExact("Specifies the minimum delay between autovacuum runs on any given database. The delay is measured in seconds, and the default is one minute"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_naptime").AtMapKey("minimum"),
						knownvalue.Int64Exact(1),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_naptime").AtMapKey("maximum"),
						knownvalue.Int64Exact(86400),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_naptime").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_naptime").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_cost_delay").AtMapKey("description"),
						knownvalue.StringExact("Specifies the cost delay value that will be used in automatic VACUUM operations. If -1 is specified, the regular vacuum_cost_delay value will be used. The default value is 20 milliseconds"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_cost_delay").AtMapKey("minimum"),
						knownvalue.Int64Exact(-1),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_cost_delay").AtMapKey("maximum"),
						knownvalue.Int64Exact(100),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_cost_delay").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_cost_delay").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_cost_limit").AtMapKey("description"),
						knownvalue.StringExact("Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuum_cost_limit value will be used."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_cost_limit").AtMapKey("minimum"),
						knownvalue.Int64Exact(-1),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_cost_limit").AtMapKey("maximum"),
						knownvalue.Int64Exact(10000),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_cost_limit").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_cost_limit").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_scale_factor").AtMapKey("description"),
						knownvalue.StringExact("Specifies a fraction of the table size to add to autovacuum_vacuum_threshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size)"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_scale_factor").AtMapKey("minimum"),
						knownvalue.Float64Exact(0.0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_scale_factor").AtMapKey("maximum"),
						knownvalue.Float64Exact(1.0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_scale_factor").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_scale_factor").AtMapKey("type"),
						knownvalue.StringExact("number"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_threshold").AtMapKey("description"),
						knownvalue.StringExact("Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_threshold").AtMapKey("minimum"),
						knownvalue.Int32Exact(0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_threshold").AtMapKey("maximum"),
						knownvalue.Int32Exact(2147483647),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_threshold").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("autovacuum_vacuum_threshold").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_delay").AtMapKey("description"),
						knownvalue.StringExact("Specifies the delay between activity rounds for the background writer in milliseconds. Default is 200."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_delay").AtMapKey("minimum"),
						knownvalue.Int64Exact(10),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_delay").AtMapKey("maximum"),
						knownvalue.Int64Exact(10000),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_delay").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_delay").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_flush_after").AtMapKey("description"),
						knownvalue.StringExact("Whenever more than bgwriter_flush_after bytes have been written by the background writer, attempt to force the OS to issue these writes to the underlying storage. Specified in kilobytes, default is 512. Setting of 0 disables forced writeback."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_flush_after").AtMapKey("minimum"),
						knownvalue.Int64Exact(0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_flush_after").AtMapKey("maximum"),
						knownvalue.Int64Exact(2048),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_flush_after").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_flush_after").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_lru_maxpages").AtMapKey("description"),
						knownvalue.StringExact("In each round, no more than this many buffers will be written by the background writer. Setting this to zero disables background writing. Default is 100."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_lru_maxpages").AtMapKey("minimum"),
						knownvalue.Int64Exact(0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_lru_maxpages").AtMapKey("maximum"),
						knownvalue.Int64Exact(1073741823),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_lru_maxpages").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_lru_maxpages").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_lru_multiplier").AtMapKey("description"),
						knownvalue.StringExact("The average recent need for new buffers is multiplied by bgwriter_lru_multiplier to arrive at an estimate of the number that will be needed during the next round, (up to bgwriter_lru_maxpages). 1.0 represents a “just in time” policy of writing exactly the number of buffers predicted to be needed. Larger values provide some cushion against spikes in demand, while smaller values intentionally leave writes to be done by server processes. The default is 2.0."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_lru_multiplier").AtMapKey("minimum"),
						knownvalue.Float64Exact(0.0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_lru_multiplier").AtMapKey("maximum"),
						knownvalue.Float64Exact(10.0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_lru_multiplier").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("bgwriter_lru_multiplier").AtMapKey("type"),
						knownvalue.StringExact("number"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("deadlock_timeout").AtMapKey("description"),
						knownvalue.StringExact("This is the amount of time, in milliseconds, to wait on a lock before checking to see if there is a deadlock condition."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("deadlock_timeout").AtMapKey("minimum"),
						knownvalue.Int64Exact(500),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("deadlock_timeout").AtMapKey("maximum"),
						knownvalue.Int64Exact(1800000),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("deadlock_timeout").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("deadlock_timeout").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("default_toast_compression").AtMapKey("description"),
						knownvalue.StringExact("Specifies the default TOAST compression method for values of compressible columns (the default is lz4)."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("default_toast_compression").AtMapKey("enum"),
						knownvalue.ListExact([]knownvalue.Check{
							knownvalue.StringExact("lz4"),
							knownvalue.StringExact("pglz"),
						}),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("default_toast_compression").AtMapKey("example"),
						knownvalue.StringExact("lz4"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("default_toast_compression").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("default_toast_compression").AtMapKey("type"),
						knownvalue.StringExact("string"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("idle_in_transaction_session_timeout").AtMapKey("description"),
						knownvalue.StringExact("Time out sessions with open transactions after this number of milliseconds"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("idle_in_transaction_session_timeout").AtMapKey("minimum"),
						knownvalue.Int64Exact(0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("idle_in_transaction_session_timeout").AtMapKey("maximum"),
						knownvalue.Int64Exact(604800000),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("idle_in_transaction_session_timeout").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("idle_in_transaction_session_timeout").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("jit").AtMapKey("description"),
						knownvalue.StringExact("Controls system-wide use of Just-in-Time Compilation (JIT)."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("jit").AtMapKey("example"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("jit").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("jit").AtMapKey("type"),
						knownvalue.StringExact("boolean"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_files_per_process").AtMapKey("description"),
						knownvalue.StringExact("PostgreSQL maximum number of files that can be open per process"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_files_per_process").AtMapKey("minimum"),
						knownvalue.Int64Exact(1000),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_files_per_process").AtMapKey("maximum"),
						knownvalue.Int64Exact(4096),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_files_per_process").AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_files_per_process").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_locks_per_transaction").AtMapKey("description"),
						knownvalue.StringExact("PostgreSQL maximum locks per transaction"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_locks_per_transaction").AtMapKey("minimum"),
						knownvalue.Int64Exact(64),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_locks_per_transaction").AtMapKey("maximum"),
						knownvalue.Int64Exact(6400),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_locks_per_transaction").AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_locks_per_transaction").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_logical_replication_workers").AtMapKey("description"),
						knownvalue.StringExact("PostgreSQL maximum logical replication workers (taken from the pool of max_parallel_workers)"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_logical_replication_workers").AtMapKey("minimum"),
						knownvalue.Int64Exact(4),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_logical_replication_workers").AtMapKey("maximum"),
						knownvalue.Int64Exact(64),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_logical_replication_workers").AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_logical_replication_workers").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_parallel_workers").AtMapKey("description"),
						knownvalue.StringExact("Sets the maximum number of workers that the system can support for parallel queries"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_parallel_workers").AtMapKey("minimum"),
						knownvalue.Int64Exact(0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_parallel_workers").AtMapKey("maximum"),
						knownvalue.Int64Exact(96),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_parallel_workers").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_parallel_workers").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_parallel_workers_per_gather").AtMapKey("description"),
						knownvalue.StringExact("Sets the maximum number of workers that can be started by a single Gather or Gather Merge node"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_parallel_workers_per_gather").AtMapKey("minimum"),
						knownvalue.Int64Exact(0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_parallel_workers_per_gather").AtMapKey("maximum"),
						knownvalue.Int64Exact(96),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_parallel_workers_per_gather").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_parallel_workers_per_gather").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_pred_locks_per_transaction").AtMapKey("description"),
						knownvalue.StringExact("PostgreSQL maximum predicate locks per transaction"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_pred_locks_per_transaction").AtMapKey("minimum"),
						knownvalue.Int64Exact(64),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_pred_locks_per_transaction").AtMapKey("maximum"),
						knownvalue.Int64Exact(5120),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_pred_locks_per_transaction").AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_pred_locks_per_transaction").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_replication_slots").AtMapKey("description"),
						knownvalue.StringExact("PostgreSQL maximum replication slots"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_replication_slots").AtMapKey("minimum"),
						knownvalue.Int64Exact(8),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_replication_slots").AtMapKey("maximum"),
						knownvalue.Int64Exact(64),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_replication_slots").AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_replication_slots").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_slot_wal_keep_size").AtMapKey("description"),
						knownvalue.StringExact("PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited). wal_keep_size minimum WAL size setting takes precedence over this."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_slot_wal_keep_size").AtMapKey("minimum"),
						knownvalue.Int32Exact(-1),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_slot_wal_keep_size").AtMapKey("maximum"),
						knownvalue.Int32Exact(2147483647),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_slot_wal_keep_size").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_slot_wal_keep_size").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_stack_depth").AtMapKey("description"),
						knownvalue.StringExact("Maximum depth of the stack in bytes"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_stack_depth").AtMapKey("minimum"),
						knownvalue.Int64Exact(2097152),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_stack_depth").AtMapKey("maximum"),
						knownvalue.Int64Exact(6291456),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_stack_depth").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_stack_depth").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_standby_archive_delay").AtMapKey("description"),
						knownvalue.StringExact("Max standby archive delay in milliseconds"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_standby_archive_delay").AtMapKey("minimum"),
						knownvalue.Int64Exact(1),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_standby_archive_delay").AtMapKey("maximum"),
						knownvalue.Int64Exact(43200000),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_standby_archive_delay").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_standby_archive_delay").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_standby_streaming_delay").AtMapKey("description"),
						knownvalue.StringExact("Max standby streaming delay in milliseconds"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_standby_streaming_delay").AtMapKey("minimum"),
						knownvalue.Int64Exact(1),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_standby_streaming_delay").AtMapKey("maximum"),
						knownvalue.Int64Exact(43200000),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_standby_streaming_delay").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_standby_streaming_delay").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_wal_senders").AtMapKey("description"),
						knownvalue.StringExact("PostgreSQL maximum WAL senders"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_wal_senders").AtMapKey("minimum"),
						knownvalue.Int64Exact(20),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_wal_senders").AtMapKey("maximum"),
						knownvalue.Int64Exact(64),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_wal_senders").AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_wal_senders").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_worker_processes").AtMapKey("description"),
						knownvalue.StringExact("Sets the maximum number of background processes that the system can support"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_worker_processes").AtMapKey("minimum"),
						knownvalue.Int64Exact(8),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_worker_processes").AtMapKey("maximum"),
						knownvalue.Int64Exact(96),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_worker_processes").AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("max_worker_processes").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("password_encryption").AtMapKey("description"),
						knownvalue.StringExact("Chooses the algorithm for encrypting passwords."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("password_encryption").AtMapKey("enum"),
						knownvalue.ListExact([]knownvalue.Check{
							knownvalue.StringExact("md5"),
							knownvalue.StringExact("scram-sha-256"),
						}),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("password_encryption").AtMapKey("example"),
						knownvalue.StringExact("scram-sha-256"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("password_encryption").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("password_encryption").AtMapKey("type"),
						knownvalue.ListExact([]knownvalue.Check{
							knownvalue.StringExact("string"),
							knownvalue.StringExact("null"),
						}),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_partman_bgw.interval").AtMapKey("description"),
						knownvalue.StringExact("Sets the time interval to run pg_partman's scheduled tasks"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_partman_bgw.interval").AtMapKey("minimum"),
						knownvalue.Int64Exact(3600),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_partman_bgw.interval").AtMapKey("maximum"),
						knownvalue.Int64Exact(604800),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_partman_bgw.interval").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_partman_bgw.interval").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_partman_bgw.role").AtMapKey("description"),
						knownvalue.StringExact("Controls which role to use for pg_partman's scheduled background tasks."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_partman_bgw.role").AtMapKey("maxLength"),
						knownvalue.Int64Exact(64),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_partman_bgw.role").AtMapKey("pattern"),
						knownvalue.StringExact("^[_A-Za-z0-9][-._A-Za-z0-9]{0,63}$"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_partman_bgw.role").AtMapKey("example"),
						knownvalue.StringExact("myrolename"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_partman_bgw.role").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_partman_bgw.role").AtMapKey("type"),
						knownvalue.StringExact("string"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_monitor.pgsm_enable_query_plan").AtMapKey("description"),
						knownvalue.StringExact("Enables or disables query plan monitoring"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_monitor.pgsm_enable_query_plan").AtMapKey("example"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_monitor.pgsm_enable_query_plan").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_monitor.pgsm_enable_query_plan").AtMapKey("type"),
						knownvalue.StringExact("boolean"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_monitor.pgsm_max_buckets").AtMapKey("description"),
						knownvalue.StringExact("Sets the maximum number of buckets "),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_monitor.pgsm_max_buckets").AtMapKey("minimum"),
						knownvalue.Int64Exact(1),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_monitor.pgsm_max_buckets").AtMapKey("maximum"),
						knownvalue.Int64Exact(10),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_monitor.pgsm_max_buckets").AtMapKey("example"),
						knownvalue.Int64Exact(10),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_monitor.pgsm_max_buckets").AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_monitor.pgsm_max_buckets").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_statements.track").AtMapKey("description"),
						knownvalue.StringExact("Controls which statements are counted. Specify top to track top-level statements (those issued directly by clients), all to also track nested statements (such as statements invoked within functions), or none to disable statement statistics collection. The default value is top."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_statements.track").AtMapKey("enum"),
						knownvalue.ListExact([]knownvalue.Check{
							knownvalue.StringExact("all"),
							knownvalue.StringExact("top"),
							knownvalue.StringExact("none"),
						}),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_statements.track").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("pg_stat_statements.track").AtMapKey("type"),
						knownvalue.ListExact([]knownvalue.Check{
							knownvalue.StringExact("string"),
						}),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("temp_file_limit").AtMapKey("description"),
						knownvalue.StringExact("PostgreSQL temporary file limit in KiB, -1 for unlimited"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("temp_file_limit").AtMapKey("maximum"),
						knownvalue.Int32Exact(2147483647),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("temp_file_limit").AtMapKey("minimum"),
						knownvalue.Int32Exact(-1),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("temp_file_limit").AtMapKey("example"),
						knownvalue.Int32Exact(5000000),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("temp_file_limit").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("temp_file_limit").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("timezone").AtMapKey("description"),
						knownvalue.StringExact("PostgreSQL service timezone"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("timezone").AtMapKey("example"),
						knownvalue.StringExact("Europe/Helsinki"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("timezone").AtMapKey("maxLength"),
						knownvalue.Int64Exact(64),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("timezone").AtMapKey("pattern"),
						knownvalue.StringExact("^[\\w/]*$"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("timezone").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("timezone").AtMapKey("type"),
						knownvalue.StringExact("string"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_activity_query_size").AtMapKey("description"),
						knownvalue.StringExact("Specifies the number of bytes reserved to track the currently executing command for each active session."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_activity_query_size").AtMapKey("maximum"),
						knownvalue.Int64Exact(10240),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_activity_query_size").AtMapKey("minimum"),
						knownvalue.Int64Exact(1024),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_activity_query_size").AtMapKey("example"),
						knownvalue.Int64Exact(1024),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_activity_query_size").AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_activity_query_size").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_commit_timestamp").AtMapKey("description"),
						knownvalue.StringExact("Record commit time of transactions."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_commit_timestamp").AtMapKey("enum"),
						knownvalue.ListExact([]knownvalue.Check{
							knownvalue.StringExact("off"),
							knownvalue.StringExact("on"),
						}),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_commit_timestamp").AtMapKey("example"),
						knownvalue.StringExact("off"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_commit_timestamp").AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_commit_timestamp").AtMapKey("type"),
						knownvalue.StringExact("string"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_functions").AtMapKey("description"),
						knownvalue.StringExact("Enables tracking of function call counts and time used."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_functions").AtMapKey("enum"),
						knownvalue.ListExact([]knownvalue.Check{
							knownvalue.StringExact("all"),
							knownvalue.StringExact("pl"),
							knownvalue.StringExact("none"),
						}),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_functions").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_functions").AtMapKey("type"),
						knownvalue.StringExact("string"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_io_timing").AtMapKey("description"),
						knownvalue.StringExact("Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_io_timing").AtMapKey("enum"),
						knownvalue.ListExact([]knownvalue.Check{
							knownvalue.StringExact("off"),
							knownvalue.StringExact("on"),
						}),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_io_timing").AtMapKey("example"),
						knownvalue.StringExact("off"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_io_timing").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("track_io_timing").AtMapKey("type"),
						knownvalue.StringExact("string"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("wal_sender_timeout").AtMapKey("description"),
						knownvalue.StringExact("Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("wal_sender_timeout").AtMapKey("example"),
						knownvalue.Int64Exact(60000),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("wal_sender_timeout").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("wal_sender_timeout").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("wal_writer_delay").AtMapKey("description"),
						knownvalue.StringExact("WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("wal_writer_delay").AtMapKey("example"),
						knownvalue.Int64Exact(50),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("wal_writer_delay").AtMapKey("maximum"),
						knownvalue.Int64Exact(200),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("wal_writer_delay").AtMapKey("minimum"),
						knownvalue.Int64Exact(10),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("wal_writer_delay").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg").AtSliceIndex(0).AtMapKey("wal_writer_delay").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg_stat_monitor_enable").AtSliceIndex(0).AtMapKey("description"),
						knownvalue.StringExact("Enable the pg_stat_monitor extension. Enabling this extension will cause the cluster to be restarted.When this extension is enabled, pg_stat_statements results for utility commands are unreliable"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg_stat_monitor_enable").AtSliceIndex(0).AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pg_stat_monitor_enable").AtSliceIndex(0).AtMapKey("type"),
						knownvalue.StringExact("boolean"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pglookout").AtSliceIndex(0).AtMapKey("max_failover_replication_time_lag").AtMapKey("description"),
						knownvalue.StringExact("Number of seconds of master unavailability before triggering database failover to standby"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pglookout").AtSliceIndex(0).AtMapKey("max_failover_replication_time_lag").AtMapKey("maximum"),
						knownvalue.Int64Exact(999999),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pglookout").AtSliceIndex(0).AtMapKey("max_failover_replication_time_lag").AtMapKey("minimum"),
						knownvalue.Int64Exact(10),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pglookout").AtSliceIndex(0).AtMapKey("max_failover_replication_time_lag").AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("pglookout").AtSliceIndex(0).AtMapKey("max_failover_replication_time_lag").AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("shared_buffers_percentage").AtSliceIndex(0).AtMapKey("description"),
						knownvalue.StringExact("Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("shared_buffers_percentage").AtSliceIndex(0).AtMapKey("maximum"),
						knownvalue.Float64Exact(60.0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("shared_buffers_percentage").AtSliceIndex(0).AtMapKey("minimum"),
						knownvalue.Float64Exact(20.0),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("shared_buffers_percentage").AtSliceIndex(0).AtMapKey("requires_restart"),
						knownvalue.Bool(true),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("shared_buffers_percentage").AtSliceIndex(0).AtMapKey("type"),
						knownvalue.StringExact("number"),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("work_mem").AtSliceIndex(0).AtMapKey("description"),
						knownvalue.StringExact("Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB)."),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("work_mem").AtSliceIndex(0).AtMapKey("maximum"),
						knownvalue.Int64Exact(1024),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("work_mem").AtSliceIndex(0).AtMapKey("minimum"),
						knownvalue.Int64Exact(1),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("work_mem").AtSliceIndex(0).AtMapKey("requires_restart"),
						knownvalue.Bool(false),
					),
					statecheck.ExpectKnownValue(
						resourceName,
						tfjsonpath.New("work_mem").AtSliceIndex(0).AtMapKey("type"),
						knownvalue.StringExact("integer"),
					),
				},
			},
		},
	})
}
