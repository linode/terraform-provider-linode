name: Nightly Smoke Tests

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      sha:
        description: 'Commit SHA to test'
        required: false
        default: ''
        type: string

jobs:
  smoke_tests:
    if: github.repository == 'linode/terraform-provider-linode' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'
          ref: ${{ github.event.inputs.sha || github.ref }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.x'

      - name: Install Dependencies
        run: |
          make deps

      - name: Run smoke tests
        id: smoke_tests
        run: |
          make smoke-test
        env:
          LINODE_TOKEN: ${{ secrets.DX_LINODE_TOKEN }}

      - name: Set Build Result
        id: set_build_result
        run: echo "BUILD_RESULT=$(if [ '${{ job.steps.smoke_tests.outcome }}' == 'success' ]; then echo 'Build Passed'; else echo 'Build Failed'; fi)" >> $GITHUB_ENV

      - name: Send custom JSON data to Slack workflow
        id: slack
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Nightly Smoke Tests Completed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Nightly Smoke Tests Completed*\n\n" +
                           "*Build Result:* ${{ env.BUILD_RESULT }}\n\n" +
                           "*Workflow:* ${{ github.workflow }}\n" +
                           "*Run ID:* ${{ github.run_id }}\n" +
                           "*Build URL:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
