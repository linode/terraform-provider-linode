name: Integration tests
on:
  workflow_dispatch: null
  push:
    branches:
      - main
      - dev
jobs:
  integration_tests:
    name: Run integration tests
    runs-on: ubuntu-latest
    env:
      EXIT_STATUS: 0
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - run: go version
      - run: make tooldeps

      - name: Update system packages
        run: sudo apt-get update -y

      - name: Install system deps
        run: sudo apt-get install -y build-essential

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python deps
        run: pip3 install requests wheel boto3

      - name: Install go-junit-report
        run: go install github.com/jstemmer/go-junit-report/v2@latest

      - name: Run Integration Tests
        run: |
          timestamp=$(date +'%Y%m%d%H%M')
          report_filename="${timestamp}_terraform_test_report.xml"        
          if ! make testacc | go-junit-report -set-exit-code > "$report_filename"; then
            echo "EXIT_STATUS=1" >> $GITHUB_ENV
          fi
          cat "$report_filename"
        env:
          LINODE_TOKEN: ${{ secrets.DX_LINODE_TOKEN }}

      - name: Add additional information to XML report
        run: |
          filename=$(ls | grep -E '^[0-9]{12}_terraform_test_report\.xml$') 
          python scripts/add_to_xml_test_report.py \
          --branch_name "${GITHUB_REF#refs/*/}" \
          --gha_run_id "$GITHUB_RUN_ID" \
          --gha_run_number "$GITHUB_RUN_NUMBER" \
          --xmlfile "${filename}"

      - name: Upload test results to bucket
        run: |
          report_filename=$(ls | grep -E '^[0-9]{12}_terraform_test_report\.xml$')
          python3 scripts/test_report_upload_script.py "${report_filename}"
        env:
          LINODE_CLI_OBJ_ACCESS_KEY: ${{ secrets.LINODE_CLI_OBJ_ACCESS_KEY }}
          LINODE_CLI_OBJ_SECRET_KEY: ${{ secrets.LINODE_CLI_OBJ_SECRET_KEY }}

      - name: Test Execution Status Handler
        run: |
          if [[ "$EXIT_STATUS" != 0 ]]; then
            echo "Test execution contains failure(s)"
            exit $EXIT_STATUS 
          else
            echo "Tests passed!"
          fi